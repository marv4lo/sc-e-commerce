"use strict";

/**
 * Copyright (c) 2017 - present, Botfuel (https://www.botfuel.io).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const logger = require('logtown')('ConfirmationView');

const BotTextMessage = require('../messages/bot-text-message');

const PromptView = require('./prompt-view');
/**
 * The view for the {@link ConfirmationDialog}.
 * Should be subclassed and provide sensible messages.
 *
 * @extends PromptView
 */


class ConfirmationView extends PromptView {
  /**
   * @constructor
   * @param {Object} $0 - an object with dialogQuestion,
   * dialogConfirmed and dialogDiscarded properties
   */
  constructor({
    dialogQuestion = 'continue dialog?',
    dialogConfirmed = 'dialog confirmed.',
    dialogDiscarded = 'dialog discarded.'
  }) {
    super();
    this.dialogQuestion = dialogQuestion;
    this.dialogConfirmed = dialogConfirmed;
    this.dialogDiscarded = dialogDiscarded;
  }
  /** @inheritDoc */


  render(userMessage, {
    matchedEntities
  }) {
    logger.debug('renderEntities', {
      matchedEntities
    });

    if (matchedEntities.answer) {
      if (matchedEntities.answer.values[0].value) {
        return [new BotTextMessage(this.dialogConfirmed)];
      }

      return [new BotTextMessage(this.dialogDiscarded)];
    }

    return [new BotTextMessage(this.dialogQuestion)];
  }

}

module.exports = ConfirmationView;