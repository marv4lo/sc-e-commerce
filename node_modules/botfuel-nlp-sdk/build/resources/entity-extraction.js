'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

var _apiResource = require('./api-resource');

var _apiResource2 = _interopRequireDefault(_apiResource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2017 - present, Botfuel (https://www.botfuel.io).
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var EntityExtraction = function (_ApiResource) {
  _inherits(EntityExtraction, _ApiResource);

  function EntityExtraction() {
    _classCallCheck(this, EntityExtraction);

    return _possibleConstructorReturn(this, (EntityExtraction.__proto__ || Object.getPrototypeOf(EntityExtraction)).apply(this, arguments));
  }

  _createClass(EntityExtraction, [{
    key: 'compute',
    value: function compute(_ref) {
      var sentence = _ref.sentence,
          dimensions = _ref.dimensions,
          antidimensions = _ref.antidimensions,
          timezone = _ref.timezone,
          case_sensitive = _ref.case_sensitive,
          keep_quotes = _ref.keep_quotes,
          keep_accents = _ref.keep_accents;

      var options = {
        method: 'GET',
        uri: _config2.default.ENTITY_EXTRACTION_API,
        // Needed so that arrays are serialized to foo=bar&foo=baz
        // Instead of foo[0]=bar&foo[1]=baz
        // (dimensions for example)
        useQuerystring: true,
        qs: {
          sentence: sentence,
          dimensions: dimensions,
          antidimensions: antidimensions,
          timezone: timezone,
          case_sensitive: case_sensitive,
          keep_quotes: keep_quotes,
          keep_accents: keep_accents
        }
      };
      return this.rp(options);
    }
  }]);

  return EntityExtraction;
}(_apiResource2.default);

exports.default = EntityExtraction;